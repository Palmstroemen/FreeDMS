The main structure:
Read this carefully and you'll understand freeDMS immediately.

Principal ideas:

1) You want to organize almost all your files in projects and subprojects.

2) Each project is represented by a directory and may be organized in subprojects (subdirectories)
   Example: Your family is a project. The members of the family are subprojects.
              /family
              /family/mother
              /family/mother/job
              /family/mother/health
              /family/mother/tennis
              /family/father
              /family/father/job
              /family/father/health
              /family/father/choir
              /family/child
              /family/child/school
              /family/child/scouts
              /family/holidays
              /family/holidays/2016_summer
              /family/... you get the idea.

            Your living situation is a project
              /Home
              /Home/House
              /Home/Garden
              /Home/Chalet

            Your computers and mobiles are a project
              /devices
              /devices/this computer
              /devices/router
              /devices/laptop
              /devices/tablet
              /devices/mobile_A
              /devices/tablet_B

            Your projects are projects
              /projects
              /projects/myHelicopterproject
              /projects/WeddingOfFrancesca
              /projects/

  So in general you organize all your data in projects in a hierarchical order of your choice. 
  You'll define master projects, subprojects, sub-subprojects and so on. 
 
3) In most of these projects you will have recurring types of information or at least parts of it. 
   These types of information could be organized in all your projects and subprojects in the same way.
   Priciples are:
             /_admin          administrative issues like planning, organizing
             /_team           in some projects you might have a team.
             /_communication  various types of communication.
                              communication with your team members (memos)
                              communication to the world (website, advertisments)
                              communication with subprojects ...
             /_infos          information collections, everything that 
                              might be of interest for the project.
             /_legal          contracts, EULAs, NDAs, patents, ... lawsuits
             /_finance        you almost always have to hassle with some financial issues.
             /_ressources     technical issues like programs, datasheets, drawings, machines, ...
             /_work           something like: plan-do-check iterations,
             /_docu           documentation of your work, pictures, reports, manuals, ...
             /_arcive         a graveyard for finished subprojects.
             /_stuff          for things that you don't know where else to put.

   freeDMS provides a standardized structure for exactly this.
   So we do not care how you name and organize your projects.
   Whether you call them: /computers/mobileXY
                      or: /Devices/myPhone
   That's completely up to you, but freeDMS always provides you a set of sub-folders like
   _finance or _docu inside your projects if you need it. And it's always _finance and not 
   once called '/Bills' and somewhere else '/Financial issues'.
   So where to put the bill of your cellphone?
   In: /computers/mobileXY/_finance
   Or: /Devices/myPhone/_finance   if you called your projects this way.
   And a simple search for "_finance" will directly point you to all your financial documents. 

4) Some important features of this structure are: 
     +) Everybody can understand it immediately. (Great for shared drives in companies)
     +) It's easy to communicate. New team members easily find their way.
     +) There is a clear lay out. (Just a vew standard directories in one hierarchy)
     +) It's easy to learn. You'll get used to it after a short time.
     +) The hierarchic project structure is always visible in the path.
     +) It's easy to look up all your /_finance documents.
     +) accessrights can be managed automatically

4) There are further levels of standardized directories at your disposal in the next level.
   You can use them if they makes sense to you. Or you can ignore them.
   Example:  /_finance
             /_finance/_insurances
             /_finance/_purchases
             /_finance/_offers
             /_finance/_leasing_from
             /_finance/_leasing_to
             /_finance/_rentals_from
             /_finance/_rentals_to
             /_finance/_sales
             /_finance/_taxes
             :

5) Now you could by default fill up each project directory with all 
   these DMS-directories. Create a project-template with all the subfolders and just copy and rename it for a new project.
   But this would just result in a mess of directories as you do not need all of them in every project.
   Some small projects especially in the beginning of the project just need one simple folder for the vew documents.
   Maybe one day you like to collect the now growing number of bills in a _finance folder. 
   So the idea is to provide these DMS-directories on demand.
   They are there if you need them, but they're not there by default.
   You should not put your files in the deepest hierarchic level by default.
   Just put your files into a folder of the next level. 
   If it's getting too crowded in an existing folder, add the next hierarchy level.
   It would be nice if your filebrowser would support this.
   Then it could i.E. show the yet not existing subfolders of a project with semitransparent icons. 
   Once you drop a file into one of these not yet existing folders, the filebrowser simply creates this folder for you.
   Unfortunately I'm not a filebrowser-programmer, so I did a workaround with scripts as shown in this repository.

6) All these freeDMS-directories are not sacrified. They are ordinary 
   directories at your disposal. You can simply use them and i.e.
   create new directories inside.
   Example:  /_finance/_purchases/urgent
             /_communication/_website/pics
   You can even make them a project themselfs
   Example:  /_communication/_website <-- make this a new project.
             now your Website might be a sub-project on it's own:
             /_communication/_website/_finance/_offers
             
7) Of course you can define your own standard project layout in a template.
   So if one day you think it would be a nice idea to have an additional "_videos" folder in your "_documentation" ...
   ... simply add it to your template. 
   Maybe one day you could even manage multiple templates.

That's it. That's the idea of freeDMS. 

